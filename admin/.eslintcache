[{"C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\index.js":"1","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\App.js":"2","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\context\\authAdmin.js":"3","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\AdminAuth.js":"4","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Admin.js":"5","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\AdminLogin.js":"6","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Product.js":"7","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Users.js":"8","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Search.js":"9","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\UserDetail.js":"10","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Order.js":"11","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\OrderDetail.js":"12","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Homepage.js":"13","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\AddProductForm.js":"14","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\OrderDetailItem.js":"15"},{"size":550,"mtime":1608751521000,"results":"16","hashOfConfig":"17"},{"size":818,"mtime":1608751521000,"results":"18","hashOfConfig":"17"},{"size":128,"mtime":1608751521000,"results":"19","hashOfConfig":"17"},{"size":449,"mtime":1608751521000,"results":"20","hashOfConfig":"17"},{"size":4552,"mtime":1608751521000,"results":"21","hashOfConfig":"17"},{"size":3783,"mtime":1608751521000,"results":"22","hashOfConfig":"17"},{"size":7226,"mtime":1608751521000,"results":"23","hashOfConfig":"17"},{"size":2685,"mtime":1608751521000,"results":"24","hashOfConfig":"17"},{"size":6942,"mtime":1608751521000,"results":"25","hashOfConfig":"17"},{"size":3124,"mtime":1608751521000,"results":"26","hashOfConfig":"17"},{"size":3707,"mtime":1608751521000,"results":"27","hashOfConfig":"17"},{"size":3058,"mtime":1608751521000,"results":"28","hashOfConfig":"17"},{"size":3026,"mtime":1608751521000,"results":"29","hashOfConfig":"17"},{"size":7692,"mtime":1608751521000,"results":"30","hashOfConfig":"17"},{"size":1555,"mtime":1608751521000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1a62zf2",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\index.js",[],["73","74"],"C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\App.js",["75"],"import React, { useState } from 'react';\nimport { Route, Switch, Router } from 'react-router-dom';\nimport { AuthAdminCtx } from './context/authAdmin';\nimport { AdminAuth } from './screens/AdminAuth';\n\nStorage.prototype.setObj = function (key, obj) {\n  return this.setItem(key, JSON.stringify(obj))\n}\nStorage.prototype.getObj = function (key) {\n  return JSON.parse(this.getItem(key))\n}\n\nfunction App() {\n  const [authAdmin, setAuthAdmin] = useState(null);\n  const authAdminCtxValue = {\n    authAdmin: authAdmin,\n    setAuthAdmin: setAuthAdmin,\n  };\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/\">\n          <AuthAdminCtx.Provider value={authAdminCtxValue}>\n            <AdminAuth />\n          </AuthAdminCtx.Provider>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\context\\authAdmin.js",[],"C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\AdminAuth.js",["76","77","78"],"import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport { AdminLogin } from './AdminLogin';\nimport { Admin } from './Admin';\n\n\nexport const AdminAuth = () => {\n    return (\n        <div>\n            <Switch>\n                <Route path=\"/homepage\" component={Admin}/>\n                <Route path=\"/\" component={AdminLogin} />\n            </Switch>\n        </div>\n    )\n}","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Admin.js",["79","80","81"],"import React, { useContext, useState } from 'react';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport { Form, FormControl, Button } from \"react-bootstrap\";\nimport \"../css/admin.css\"\nimport { Link, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Product } from \"./Product.js\";\nimport { Users } from './Users';\nimport { UserDetail } from './UserDetail';\nimport { Order } from './Order';\nimport { Search } from './Search';\nimport { OrderDetail } from './OrderDetail';\nimport { AuthAdminCtx } from '../context/authAdmin';\nimport { ExitToApp } from '@material-ui/icons';\nimport { Homepage } from './Homepage';\n\nconst SidebarData = [{\n    title: \"Home\",\n    icon: <HomeIcon />,\n    link: \"/homepage\",\n},\n{\n    title: \"Products\",\n    icon: <InfoIcon />,\n    link: \"/homepage/products\",\n},\n{\n    title: \"Users\",\n    icon: <PeopleOutlineIcon />,\n    link: \"/homepage/users\",\n},\n{\n    title: \"Order\",\n    icon: <ReceiptIcon />,\n    link: \"/homepage/orders\",\n}\n];\n\nconst getWithExpiry = (key) => {\n    const itemStr = localStorage.getItem(key)\n\n    // if the item doesn't exist, return null\n    if (!itemStr) {\n        return null\n    }\n\n    const item = JSON.parse(itemStr)\n    const now = new Date()\n\n    // compare the expiry time of the item with the current time\n    if (now.getTime() > item.expiry) {\n        // If the item is expired, delete the item from storage\n        // and return null\n        localStorage.removeItem(key)\n        return null\n    }\n    return item.user\n}\n\nconst setWithExpiry = (key, obj, ttl) => {\n    const now = new Date()\n    const item = {\n        user: obj,\n        expiry: now.getTime() + ttl,\n    }\n    localStorage.setItem(key, JSON.stringify(item))\n}\n\nexport const Admin = () => {\n    // const { authAdmin, setAuthAdmin } = useContext(AuthAdminCtx)\n    const [state, setState] = useState(false)\n    if (getWithExpiry(\"myAdmin\") === null) {\n        return <Redirect to=\"/\" />\n    } else {\n        setWithExpiry(\"myAdmin\", { username: getWithExpiry(\"myAdmin\") }, 1000000)\n    }\n    return (\n        <div className=\"admin\">\n            <div className=\"Sidebar\">\n                <div className='Sidebar-header'>\n                    <span>Swings Admin</span>\n                </div>\n                <ul className=\"SidebarList\">\n                    {SidebarData.map((val, key) => {\n                        return (\n                            <li\n                                key={key}\n                                className=\"row\"\n                                id={window.location.pathname === val.link ? \"active\" : \"\"}\n                                onClick={() => {\n                                    window.location.pathname = val.link;\n                                }}\n                            >\n                                <div id=\"icon\">{val.icon}</div> <div id=\"title\">{val.title}</div>\n                            </li>\n                        );\n                    })}\n                    <li\n                        className=\"row\"\n                        onClick={() => {\n                            localStorage.removeItem(\"myAdmin\")\n                            setState(!state)\n                        }}\n                    >\n                        <div id=\"icon\"><ExitToApp /></div> <div id=\"title\">Logout</div>\n                    </li>\n                </ul>\n            </div>\n            <div>\n                <div className='search'>\n                    <Form className='form-search' action=\"/homepage/search\" inline>\n                        <FormControl type=\"text\" placeholder=\"Nhập tên sản phẩm...\" className=\"mr-sm-2\" name=\"search\" />\n                        <Button type=\"submit\" variant=\"outline-success\">Search</Button>\n                    </Form>\n                </div>\n                <Switch>\n                    <Route path=\"/homepage/products\" component={Product} />\n                    <Route path=\"/homepage/search\" component={Search} />\n                    <Route path=\"/homepage/orders/:id\" component={OrderDetail} />\n                    <Route path=\"/homepage/orders\" component={Order} />\n                    <Route path=\"/homepage/users/:username\" component={UserDetail} />\n                    <Route path=\"/homepage/users\" component={Users} />\n                    <Route path=\"/homepage\" component={Homepage} />\n                </Switch>\n            </div>\n        </div>\n    )\n}","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\AdminLogin.js",["82","83"],"import React, { useContext, useState } from 'react'\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../css/adminlogin.css\"\nimport { Container, Modal } from 'react-bootstrap';\nimport { AuthAdminCtx } from '../context/authAdmin';\nimport { Redirect } from 'react-router-dom';\n\nimport axios from \"axios\";\n\nconst setWithExpiry = (key, obj, ttl) => {\n  const now = new Date()\n  const item = {\n    user: obj,\n    expiry: now.getTime() + ttl,\n  }\n  localStorage.setItem(key, JSON.stringify(item))\n}\nconst getWithExpiry = (key) => {\n  const itemStr = localStorage.getItem(key)\n\n  // if the item doesn't exist, return null\n  if (!itemStr) {\n      return null\n  }\n\n  const item = JSON.parse(itemStr)\n  const now = new Date()\n\n  // compare the expiry time of the item with the current time\n  if (now.getTime() > item.expiry) {\n      // If the item is expired, delete the item from storage\n      // and return null\n      localStorage.removeItem(key)\n      return null\n  }\n  return item.user\n}\n\nexport const AdminLogin = () => {\n  const { authAdmin, setAuthAdmin } = useContext(AuthAdminCtx)\n  const [isError, setError ] = useState(false)\n  const [show, setShow] = useState(false);\n  const [login, setLogin] = useState(false);\n  const [registing, setRegisting] = useState(false)\n\n  const initialValues_ = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const validationSchema_ = Yup.object().shape({\n    username: Yup.string()\n      .required(\"Username is required!\"),\n    password: Yup.string()\n      .required(\"Password is required!\"),\n  });\n\n  const onSubmit_ = async (values) => {\n    setLogin(true);\n    await axios\n      .post(\"http://localhost:5000/admin/login\", {\n        username: values.username,\n        password: values.password,\n      })\n      .then((res) => {\n        setAuthAdmin(res.data.user);\n        setWithExpiry(\"myAdmin\", {username: values.username}, 1000000)\n        setRegisting(true)\n      })\n      .catch((err) => {\n        console.log(err)\n        setError(true)\n        setShow(true)\n      })\n      .finally(() => {\n        setLogin(false)\n      });\n  };\n\n  if (getWithExpiry('myAdmin') !== null) {\n    return <Redirect to=\"/homepage\" />\n  } \n\n  const onClose = (setFieldValue) => {\n    setShow(false); \n    setError(true);\n\n    setFieldValue(\"username\", \"\");\n    setFieldValue(\"password\", \"\");\n  }\n  return (\n    <Formik\n      initialValues={initialValues_}\n      validationSchema={validationSchema_}\n      onSubmit={onSubmit_}\n    >\n      {({values,\n        errors,\n        setFieldValue,\n        isValid}) => {\n        return (\n          <Container className=\"adminContainer\">\n            <Modal show={show && isError} onHide={() => {onClose(setFieldValue)}}>\n              <Modal.Header closeButton>\n                <span>Mật khẩu sai hoặc tài khoản không tồn tại!</span>\n              </Modal.Header>\n            </Modal>\n            <Form>\n              <p className=\"header\">Admin</p>\n              <label>Username</label>\n              <Field className=\"field\" type=\"text\" name=\"username\" value={values.username}/>\n              <ErrorMessage className=\"error\" name=\"username\" component=\"div\" />\n              <label>Password</label>\n              <Field className=\"field\" type=\"password\" name=\"password\" value={values.password}/>\n              <ErrorMessage className=\"error\" name=\"password\" component=\"div\" />\n\n              <div className = \"button-wrapper\">\n                <button\n                  className=\"button\"\n                  type=\"submit\"\n                  disabled={login && !isValid}\n                >\n                  {login ? \"Login...\" : \"Login\"}\n                </button>\n              </div>\n            </Form>\n          </Container>\n        );\n      }}\n    </Formik>\n  );\n}\n\n","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Product.js",[],"C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Users.js",["84","85"],"import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"../css/user.css\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Axios from \"axios\";\n\n\nconst RenderUser = (props) => {\n    const { user, users, setUsers } = props\n    function deleteUser(e, username) {\n        e.preventDefault();\n        let arr = users;\n        setUsers(arr.filter((user) => user.username !== username));\n        // console.log(arr);\n    }\n    return (\n        <tr>\n            <td>{user._id.substring(0, 12)}...</td>\n            <td>{user.name}</td>\n            <td>\n                <a href={\"/homepage/users/\" + user.username} className=\"link\">{user.username}</a>\n            </td>\n            {/* <td>123</td> */}\n            <td>{user.phone}</td>\n            <td>{user.email}</td>\n            <td>{user.address}</td>\n            {/* <td>\n                <div\n                    onClick={(e) => {\n                        deleteUser(e, user.username);\n                    }}\n                >\n                    <DeleteIcon />\n                </div>\n            </td> */}\n        </tr>\n    );\n};\n\nexport const Users = () => {\n    const [users, setUsers] = useState(null);\n\n    const fetchUserData = async () => {\n        return await Axios\n            .get(\"http://localhost:5000/\")\n            .then((res) => {\n                var index;\n                var arr = []\n                for (index = res.data.message.length - 1; index >= 0; index--) {\n                    arr.push(res.data.message[index])\n                }\n                setUsers(arr)\n                // console.log(arr)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    useEffect(() => {\n        fetchUserData()\n    }, [])\n    \n    if(users === null) {\n        return <div></div>\n    }\n\n    return (\n        <div className=\"user\">\n            <h1>Thông tin tài khoản</h1>\n            <Table className=\"table-data \" striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Username</th>\n                        {/* <th>Password</th> */}\n                        <th>Phone</th>\n                        <th>Email</th>\n                        <th>Address</th>\n                        {/* <th></th> */}\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        users.map(item => <RenderUser user={item} users={users} setUsers={setUsers} /> )\n                    }\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n\n","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Search.js",["86"],"import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"../css/search.css\";\nimport StarOutline from \"@material-ui/icons/StarOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Axios from \"axios\";\n\nconst typeList = [{ type: \"SALE OFF 50%\", link: \"sale-50\" },\n{ type: \"ÁO\", link: \"ao\" },\n{ type: \"ÁO SƠ MI\", link: \"ao-so-mi\" },\n{ type: \"ÁO THUN\", link: \"ao-thun\" },\n{ type: \"ÁO POLO\", link: \"ao-polo\" },\n{ type: \"ÁO LEN\", link: \"ao-len\" },\n{ type: \"ÁO VEST\", link: \"ao-vest\" },\n{ type: \"QUẦN\", link: \"quan\" },\n{ type: \"QUẦN JEAN\", link: \"quan-jean\" },\n{ type: \"QUẦN DÀI\", link: \"quan-dai\" },\n{ type: \"QUẦN TÂY\", link: \"quan-tay\" },\n{ type: \"QUẦN SHORT\", link: \"quan-short\" },\n{ type: \"QUẦN KAKI\", link: \"quan-kaki\" },\n{ type: \"QUẦN JOGGER\", link: \"quan-jogger\" },\n{ type: \"BALO-TÚI XÁCH\", link: \"balo\" },\n{ type: \"GIÀY DÉP\", link: \"giay\" },\n{ type: \"GIẦY DA\", link: \"giay-da\" },\n{ type: \"GIẦY THỂ THAO\", link: \"giay-the-thao\" },\n{ type: \"PHỤ KIỆN KHÁC\", link: \"phu-kien\" },\n{ type: \"UNDERWEAR\", link: \"underwear\" },\n{ type: \"VỚ\", link: \"vo\" },\n{ type: \"THẮT LƯNG\", link: \"that-lung\" },\n{ type: \"VÍ\", link: \"vi\" },\n{ type: \"ÁO KHOÁC\", link: \"ao-khoac\" },\n{ type: \"ÁO KHOÁC BÒ\", link: \"ao-khoac-bo\" },\n{ type: \"ÁO NỈ\", link: \"ao-ni\" },\n{ type: \"ÁO HOODIE\", link: \"ao-hoodie\" },\n{ type: \"ÁO KHOÁC DA\", link: \"ao-khoac-da\"},\n{ type: \"ÁO KHOÁC DA\", link: \"ao-khhoac-da\"},\n{ type: \"SẢN PHẨM MÙA ĐÔNG\", link: \"sp-mua-dong\" }]\nconst RenderProduct = (props) => {\n    const { product, setProducts, setId, products } = props\n    const sale = [\"0\", \"50\"]\n    const countStar = (rating) => {\n        var count = 0\n        if (rating.length === 0) {\n            return 0;\n        }\n        var x\n        for (x in rating) {\n            count += rating[x].score\n        }\n        return parseInt(count / rating.length);\n    }\n    function deleteProduct(e, productName) {\n        e.preventDefault()\n        let arr = products\n        setProducts(arr.filter(product => product.name !== productName))\n        setId(product._id)\n    }\n\n    const updateSale = async (id, obj) => {\n        return Axios\n            .put(\"http://localhost:5000/products/\" + id, obj)\n            .then((res) => {\n                // console.log(res.data.message)\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }\n\n    const handleChange = (e) => {\n        var obj = {\n            ...product,\n            discount: parseInt(e.target.value),\n        }\n        updateSale(product._id, obj)\n    }\n    return (\n        <tr>\n            <td>{[product._id.substring(0, 12), product._id.substring(13)].join(\" \")}</td>\n            <td>{product.name}</td>\n            <td>\n            {\n                typeList.map(item => {\n                    if (item.link === product.category) {\n                        return (<span>\n                            {item.type}\n                        </span>)\n                    }\n                    return <span></span>\n                })\n            }\n            </td>\n            <td>\n            {\n                typeList.map(item => {\n                    if (item.link === product.subcategory) {\n                        return (<span>\n                            {item.type}\n                        </span>)\n                    }\n                    return <span></span>\n                })\n            }\n            </td>\n            <td>{product.price.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + '₫'}</td>\n            <td>{countStar(product.rating)} <StarOutline className=\"star-icon\" /></td>\n            <td>\n                {\n                    product.size.map(item => <div>{item}</div>)\n                }\n            </td>\n            <td>\n                <select onChange={handleChange}>\n                    {\n                        sale.map(item => {\n                            if (item === product.discount) {\n                                return (<option value={item} selected=\"selected\">{item + \"%\"}</option>)\n                            }\n                            return <option value={item}>{item + \"%\"}</option>\n                        })\n                    }\n                </select>\n            </td>\n            <td>\n                <img src={Object.keys(product.image[0]).map((key) => product.image[0][key]).join(\"\")} alt='' width=\"130px\" height=\"130px\"></img>\n            </td>\n            <td>\n                <div\n                    onClick={(e) => {\n                        deleteProduct(e, product.name);\n                    }}\n                >\n                    <DeleteIcon></DeleteIcon>\n                </div>\n            </td>\n        </tr>\n    );\n};\nexport const Search = ({location}) => {\n    const [products, setProducts] = useState(null);\n    const [id, setId] = useState(null)\n    useEffect(() => {\n        const fetchData = async () => {\n            return Axios.get(\"http://localhost:5000/products/:name?searchKeyword=\" + location.search.split(\"=\")[1])\n                .then((res) => {\n                    var index;\n                    var arr = []\n                    for (index = res.data.message.length - 1; index >= 0; index--) {\n                        arr.push(res.data.message[index])\n                    }\n                    setProducts(arr)\n                })\n                .catch((err) => { console.log(err) })\n        }\n        fetchData()\n    }, [])\n\n    useEffect(() => {\n        const updateData = async () => {\n            return await Axios\n                .delete(\"http://localhost:5000/products/\" + id)\n                .then((res) => { \n                    // console.log(\"del successful\") \n                })\n                .catch((err) => { console.log(err) })\n        }\n        if (id !== null) {\n            updateData();\n            setId(null)\n        }\n    }, [id])\n    if (products === null) {\n        return <div></div>\n    }\n\n    return (\n        <div className=\"product\">\n            <Table className=\"table-data \" striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Product</th>\n                        <th>Category</th>\n                        <th>Subcategory</th>\n                        <th>Price</th>\n                        <th>Rating</th>\n                        <th>Size</th>\n                        <th>Discount</th>\n                        <th>Image</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products !== null\n                        ? products.map(item => <RenderProduct product={item} setProducts={setProducts} setId={setId} products={products} />)\n                        : <tr></tr>\n                    }\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\UserDetail.js",["87"],"import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"../css/user.css\";\nimport Axios from 'axios'\n\nconst RenderOrder = (props) => {\n    const { order } = props\n    function formatDate(dateStr, format) {\n        var date = new Date(Date.parse(dateStr))\n        const map = {\n            mm: date.getMonth() + 1,\n            dd: date.getDate(),\n            yy: date.getFullYear().toString().slice(-2),\n            yyyy: date.getFullYear()\n        }\n\n        return format.replace(/mm|dd|yy|yyy/gi, matched => map[matched])\n    }\n\n    const updateState = async () => {\n        return await Axios\n        .put(\"http://localhost:5000/order/updateOrder/\" + order._id)\n        .then((res) => { \n            // console.log(res)\n        })\n        .catch((err) => { console.log(err) })\n    }\n\n    const handleChangeState = (e) => {\n        if (e.target.value === \"Delivered\"){\n            updateState(true)\n        }\n    }\n\n    return (\n        <tr>\n            <td>\n                <a href={\"/homepage/orders/\" + order._id} className=\"link\">#{order._id}</a>\n            </td>\n            <td>{order.username}</td>\n            <td>{order.total.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + '₫'}</td>\n            <td>{formatDate(order.orderDate, 'dd/mm/yy')}</td>\n            <td>\n                <select onChange={handleChangeState} defaultValue={order.isOrderCompleted ? \"Delivered\" : \"Processing\"} disabled={order.isOrderCompleted}>\n                    <option value=\"Delivered\">Delivered</option>\n                    <option value=\"Processing\">Processing</option>\n                </select>\n            </td>\n        </tr>\n    );\n};\n\nexport const UserDetail = ({ match }) => {\n    // console.log(match.params.username)\n    const [orders, setOrders] = useState(null);\n    \n    useEffect(() => {\n        const fetchTransactions = async () => {\n            return await Axios\n                .get(\"http://localhost:5000/order/\" + match.params.username)\n                .then((res) => {\n                    var index;\n                    var arr = []\n                    for (index = res.data.message.length-1; index >= 0; index--){\n                        arr.push(res.data.message[index])\n                    }\n                    setOrders(arr); \n                })\n                .catch((err) => { console.log(err) })\n        }\n        fetchTransactions()\n    },[])\n\n    if(orders === null){\n        return (<div></div>)\n    }\n\n    return (\n        <div className=\"order\">\n            <h1>Lịch sử mua hàng của <span>{match.params.username}</span></h1>\n            <Table className=\"table-data\" striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>Order ID</th>\n                        <th>Username</th>\n                        <th>Price</th>\n                        <th>Order Date</th>\n                        <th>State</th>\n                    </tr>\n                </thead>\n                <tbody>{orders.map(item => <RenderOrder order={item}/>)}</tbody>\n            </Table>\n        </div>\n    );\n}\n","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Order.js",["88","89"],"import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"../css/user.css\";\nimport Axios from 'axios'\n\nconst RenderOrder = (props) => {\n    const { order } = props\n    function formatDate(dateStr, format) {\n        var date = new Date(Date.parse(dateStr))\n        const map = {\n            mm: date.getMonth() + 1,\n            dd: date.getDate(),\n            yy: date.getFullYear().toString().slice(-2),\n            yyyy: date.getFullYear()\n        }\n\n        return format.replace(/mm|dd|yy|yyy/gi, matched => map[matched])\n    }\n\n    const updateState = async () => {\n        return await Axios\n            .put(\"http://localhost:5000/order/updateOrder/\" + order._id)\n            .then((res) => {\n                // console.log(res)\n            })\n            .catch((err) => { console.log(err) })\n    }\n\n    const handleChangeState = (e) => {\n        if (e.target.value === \"Delivered\") {\n            updateState(true)\n        }\n    }\n\n    return (\n        <tr>\n            <td>\n                <a href={\"/homepage/orders/\" + order._id} className=\"link\">#{order._id}</a>\n            </td>\n            <td>\n                {\n                    order.username === \"Khách hàng\" \n                    ? order.username :\n                    <a href={\"/homepage/users/\" + order.username} className=\"link\">{order.username}</a>\n                }\n            </td>\n            <td>{order.total.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + '₫'}</td>\n            <td>{formatDate(order.orderDate, 'dd/mm/yy')}</td>\n            <td>\n                <select onChange={handleChangeState} defaultValue={order.isOrderCompleted ? \"Delivered\" : \"Processing\"} disabled={order.isOrderCompleted}>\n                    <option value=\"Delivered\">Delivered</option>\n                    <option value=\"Processing\">Processing</option>\n                </select>\n            </td>\n        </tr>\n    );\n};\n\nexport const Order = () => {\n    const [orders, setOrders] = useState(null);\n\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            return await Axios\n                .get(\"http://localhost:5000/order/allOrder\")\n                .then((res) => {\n                    var index;\n                    var arr = []\n                    for (index = res.data.message.length - 1; index >= 0; index--) {\n                        arr.push(res.data.message[index])\n                    }\n                    setOrders(arr);\n                })\n                .catch((err) => { console.log(err) })\n        }\n        fetchTransactions()\n    }, [])\n\n    if (orders === null) {\n        return (<div></div>)\n    }\n\n    return (\n        <div className=\"order\">\n            <h1>Lịch sử mua hàng</h1>\n            <Table className=\"table-data\" striped bordered hover variant=\"dark\">\n                <thead>\n                    <tr>\n                        <th>Order ID</th>\n                        <th>Usename</th>\n                        <th>Price</th>\n                        <th>Order Date</th>\n                        <th>State</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        orders.map(item => {\n                            if (!item.isOrderCompleted)\n                                return <RenderOrder order={item} />\n                        })\n                    }\n                    {\n                        orders.map(item => {\n                            if (item.isOrderCompleted)\n                                return <RenderOrder order={item} />\n                        })\n                    }\n                </tbody>\n            </Table>\n        </div>\n    );\n}\n","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\OrderDetail.js",["90"],"import React, { useEffect, useState } from 'react'\nimport \"../css/orderdetail.css\"\nimport { Table } from \"react-bootstrap\";\nimport { OrderDetailItem } from './OrderDetailItem';\nimport Axios from 'axios';\n\nexport const OrderDetail = ({match}) => {\n    // console.log(match.params.id)\n    const [transaction, setTransaction] = useState(null)\n\n    const fetchTransactions = async () => {\n        return await Axios\n            .get(\"http://localhost:5000/order/getOrder/\" + match.params.id)\n            .then((res) => { \n                setTransaction(res.data.message)\n                // console.log(res.data.message) \n            })\n            .catch((err) => { console.log(err) })\n    }\n    useEffect(() => {\n        fetchTransactions()\n    },[])\n    if (transaction === null) {\n        return <div></div>\n    }\n\n    return (\n        <div className=\"order-detail\">\n            <div className=\"detail-header\">Đơn hàng <span>#{match.params.id}</span></div>\n            <div className=\"user-info\">\n                <h3>{transaction.name}</h3>\n                <div>\n                    <span>{transaction.email}</span>\n                </div>\n                <div>\n                    <span>{transaction.phone}</span>\n                </div>\n                <div>\n                    <span>{transaction.address}</span>\n                </div>\n            </div>\n            <div>\n                <Table className=\"table-data\" striped bordered hover variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th>Sản phẩm</th>\n                            <th className=\"text-center\">Mã sản phẩm</th>\n                            <th className=\"text-center\">Đơn giá</th>\n                            <th className=\"text-center\">Số lượng</th>\n                            <th className=\"text-right\">Thành tiền</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* {products !== null\n                        ? products.map(item => <RenderProduct product={item} setProducts={setProducts} setId={setId} products={products} />)\n                        : <tr></tr>\n                    } */}\n                        {\n                            transaction.order.map((item) => <OrderDetailItem item={item}/>)\n                        }\n                        <tr>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <span>Tổng tiền</span>\n                            </td>\n                            <td className=\"text-right\">\n                                <span>{transaction.total.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + '₫'}</span>\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n        </div>\n    )\n}\n","C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\Homepage.js",[],"C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\AddProductForm.js",[],"C:\\Users\\LOC\\Documents\\Visual Studio Code\\SwingsWeb-main\\admin\\src\\screens\\OrderDetailItem.js",["91"],"import React, { useEffect, useState } from 'react'\nimport Axios from 'axios';\n\nexport const OrderDetailItem = ({item}) => {\n    const [product, setProduct] = useState(null)\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await Axios\n                .get(\"http://localhost:5000/products/product/\" + item.product)\n                .then((res) => {\n                    setProduct(res.data.message)\n                })\n                .catch((err) => { console.log(err) })\n        }\n        fetchData()\n    }, [])\n\n    if (product === null) {\n        return <tr></tr>\n    }\n    return (\n        <tr>\n            <td className=\"text-center\">\n                <img src={Object.keys(product.image[0]).map((key) => product.image[0][key]).join(\"\")}\n                    alt=\"img\" className=\"product-img\" />\n            </td>\n            <td>\n                <div><span>{product.name}</span></div>\n                <div>Size: <span>{item.size}</span></div>\n            </td>\n            <td className=\"text-center\">\n                <span>{item.product}</span>\n            </td>\n            <td className=\"text-center\">\n                <span>{item.price.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + '₫'}</span>\n            </td>\n            <td className=\"text-center\">\n                <span>{item.quantity}</span>\n            </td>\n            <td className=\"text-right\">\n                <span>{(item.quantity*item.price).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,') + '₫'}</span>\n            </td>\n        </tr>\n    )\n}\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":25,"nodeType":"98","messageId":"99","endLine":2,"endColumn":31},{"ruleId":"96","severity":1,"message":"100","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":2,"column":17,"nodeType":"98","messageId":"99","endLine":2,"endColumn":26},{"ruleId":"96","severity":1,"message":"102","line":2,"column":28,"nodeType":"98","messageId":"99","endLine":2,"endColumn":36},{"ruleId":"96","severity":1,"message":"103","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":27},{"ruleId":"96","severity":1,"message":"104","line":8,"column":10,"nodeType":"98","messageId":"99","endLine":8,"endColumn":14},{"ruleId":"96","severity":1,"message":"105","line":15,"column":10,"nodeType":"98","messageId":"99","endLine":15,"endColumn":22},{"ruleId":"96","severity":1,"message":"106","line":41,"column":11,"nodeType":"98","messageId":"99","endLine":41,"endColumn":20},{"ruleId":"96","severity":1,"message":"107","line":45,"column":10,"nodeType":"98","messageId":"99","endLine":45,"endColumn":19},{"ruleId":"96","severity":1,"message":"108","line":4,"column":8,"nodeType":"98","messageId":"99","endLine":4,"endColumn":18},{"ruleId":"96","severity":1,"message":"109","line":10,"column":14,"nodeType":"98","messageId":"99","endLine":10,"endColumn":24},{"ruleId":"110","severity":1,"message":"111","line":156,"column":8,"nodeType":"112","endLine":156,"endColumn":10,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":72,"column":7,"nodeType":"112","endLine":72,"endColumn":9,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":98,"column":41,"nodeType":"118","messageId":"119","endLine":98,"endColumn":43},{"ruleId":"116","severity":1,"message":"117","line":104,"column":41,"nodeType":"118","messageId":"119","endLine":104,"endColumn":43},{"ruleId":"110","severity":1,"message":"120","line":22,"column":7,"nodeType":"112","endLine":22,"endColumn":9,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":17,"column":8,"nodeType":"112","endLine":17,"endColumn":10,"suggestions":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","'AuthAdminCtx' is defined but never used.","'authAdmin' is assigned a value but never used.","'registing' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'deleteUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'match.params.username'. Either include it or remove the dependency array.",["127"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'fetchTransactions'. Either include it or remove the dependency array.",["128"],"React Hook useEffect has a missing dependency: 'item.product'. Either include it or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [location.search]",{"range":"138","text":"139"},"Update the dependencies array to be: [match.params.username]",{"range":"140","text":"141"},"Update the dependencies array to be: [fetchTransactions]",{"range":"142","text":"143"},"Update the dependencies array to be: [item.product]",{"range":"144","text":"145"},[5422,5424],"[location.search]",[2412,2414],"[match.params.username]",[744,746],"[fetchTransactions]",[531,533],"[item.product]"]